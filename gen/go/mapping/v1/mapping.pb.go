// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.3
// source: mapping/v1/mapping.proto

package mappingv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Запрос на получение всех маппингов
type GetAllMappingsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAllMappingsRequest) Reset() {
	*x = GetAllMappingsRequest{}
	mi := &file_mapping_v1_mapping_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAllMappingsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllMappingsRequest) ProtoMessage() {}

func (x *GetAllMappingsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mapping_v1_mapping_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllMappingsRequest.ProtoReflect.Descriptor instead.
func (*GetAllMappingsRequest) Descriptor() ([]byte, []int) {
	return file_mapping_v1_mapping_proto_rawDescGZIP(), []int{0}
}

// Ответ с маппингами
type GetAllMappingsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Mappings      []*Mapping             `protobuf:"bytes,1,rep,name=mappings,proto3" json:"mappings,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAllMappingsResponse) Reset() {
	*x = GetAllMappingsResponse{}
	mi := &file_mapping_v1_mapping_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAllMappingsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllMappingsResponse) ProtoMessage() {}

func (x *GetAllMappingsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mapping_v1_mapping_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllMappingsResponse.ProtoReflect.Descriptor instead.
func (*GetAllMappingsResponse) Descriptor() ([]byte, []int) {
	return file_mapping_v1_mapping_proto_rawDescGZIP(), []int{1}
}

func (x *GetAllMappingsResponse) GetMappings() []*Mapping {
	if x != nil {
		return x.Mappings
	}
	return nil
}

// Маппинг станции на центральную систему
type Mapping struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	StationId       string                 `protobuf:"bytes,1,opt,name=station_id,json=stationId,proto3" json:"station_id,omitempty"`
	CentralSystemId int32                  `protobuf:"varint,2,opt,name=central_system_id,json=centralSystemId,proto3" json:"central_system_id,omitempty"`
	Weight          int32                  `protobuf:"varint,3,opt,name=weight,proto3" json:"weight,omitempty"`
	IsMaster        bool                   `protobuf:"varint,4,opt,name=is_master,json=isMaster,proto3" json:"is_master,omitempty"`
	IsEnabled       bool                   `protobuf:"varint,5,opt,name=is_enabled,json=isEnabled,proto3" json:"is_enabled,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Mapping) Reset() {
	*x = Mapping{}
	mi := &file_mapping_v1_mapping_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Mapping) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Mapping) ProtoMessage() {}

func (x *Mapping) ProtoReflect() protoreflect.Message {
	mi := &file_mapping_v1_mapping_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Mapping.ProtoReflect.Descriptor instead.
func (*Mapping) Descriptor() ([]byte, []int) {
	return file_mapping_v1_mapping_proto_rawDescGZIP(), []int{2}
}

func (x *Mapping) GetStationId() string {
	if x != nil {
		return x.StationId
	}
	return ""
}

func (x *Mapping) GetCentralSystemId() int32 {
	if x != nil {
		return x.CentralSystemId
	}
	return 0
}

func (x *Mapping) GetWeight() int32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *Mapping) GetIsMaster() bool {
	if x != nil {
		return x.IsMaster
	}
	return false
}

func (x *Mapping) GetIsEnabled() bool {
	if x != nil {
		return x.IsEnabled
	}
	return false
}

// Запрос на создание маппинга
type CreateMappingRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	StationId       string                 `protobuf:"bytes,1,opt,name=station_id,json=stationId,proto3" json:"station_id,omitempty"`
	CentralSystemId int32                  `protobuf:"varint,2,opt,name=central_system_id,json=centralSystemId,proto3" json:"central_system_id,omitempty"`
	Weight          int32                  `protobuf:"varint,3,opt,name=weight,proto3" json:"weight,omitempty"`
	IsMaster        bool                   `protobuf:"varint,4,opt,name=is_master,json=isMaster,proto3" json:"is_master,omitempty"`
	IsEnabled       bool                   `protobuf:"varint,5,opt,name=is_enabled,json=isEnabled,proto3" json:"is_enabled,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *CreateMappingRequest) Reset() {
	*x = CreateMappingRequest{}
	mi := &file_mapping_v1_mapping_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateMappingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMappingRequest) ProtoMessage() {}

func (x *CreateMappingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mapping_v1_mapping_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMappingRequest.ProtoReflect.Descriptor instead.
func (*CreateMappingRequest) Descriptor() ([]byte, []int) {
	return file_mapping_v1_mapping_proto_rawDescGZIP(), []int{3}
}

func (x *CreateMappingRequest) GetStationId() string {
	if x != nil {
		return x.StationId
	}
	return ""
}

func (x *CreateMappingRequest) GetCentralSystemId() int32 {
	if x != nil {
		return x.CentralSystemId
	}
	return 0
}

func (x *CreateMappingRequest) GetWeight() int32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *CreateMappingRequest) GetIsMaster() bool {
	if x != nil {
		return x.IsMaster
	}
	return false
}

func (x *CreateMappingRequest) GetIsEnabled() bool {
	if x != nil {
		return x.IsEnabled
	}
	return false
}

// Ответ на создание маппинга
type CreateMappingResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateMappingResponse) Reset() {
	*x = CreateMappingResponse{}
	mi := &file_mapping_v1_mapping_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateMappingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMappingResponse) ProtoMessage() {}

func (x *CreateMappingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mapping_v1_mapping_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMappingResponse.ProtoReflect.Descriptor instead.
func (*CreateMappingResponse) Descriptor() ([]byte, []int) {
	return file_mapping_v1_mapping_proto_rawDescGZIP(), []int{4}
}

func (x *CreateMappingResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// Запрос на обновление маппинга
type UpdateMappingRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	StationId       string                 `protobuf:"bytes,1,opt,name=station_id,json=stationId,proto3" json:"station_id,omitempty"`
	CentralSystemId int32                  `protobuf:"varint,2,opt,name=central_system_id,json=centralSystemId,proto3" json:"central_system_id,omitempty"`
	Weight          int32                  `protobuf:"varint,3,opt,name=weight,proto3" json:"weight,omitempty"`
	IsMaster        bool                   `protobuf:"varint,4,opt,name=is_master,json=isMaster,proto3" json:"is_master,omitempty"`
	IsEnabled       bool                   `protobuf:"varint,5,opt,name=is_enabled,json=isEnabled,proto3" json:"is_enabled,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *UpdateMappingRequest) Reset() {
	*x = UpdateMappingRequest{}
	mi := &file_mapping_v1_mapping_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateMappingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMappingRequest) ProtoMessage() {}

func (x *UpdateMappingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mapping_v1_mapping_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMappingRequest.ProtoReflect.Descriptor instead.
func (*UpdateMappingRequest) Descriptor() ([]byte, []int) {
	return file_mapping_v1_mapping_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateMappingRequest) GetStationId() string {
	if x != nil {
		return x.StationId
	}
	return ""
}

func (x *UpdateMappingRequest) GetCentralSystemId() int32 {
	if x != nil {
		return x.CentralSystemId
	}
	return 0
}

func (x *UpdateMappingRequest) GetWeight() int32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *UpdateMappingRequest) GetIsMaster() bool {
	if x != nil {
		return x.IsMaster
	}
	return false
}

func (x *UpdateMappingRequest) GetIsEnabled() bool {
	if x != nil {
		return x.IsEnabled
	}
	return false
}

// Ответ на обновление маппинга
type UpdateMappingResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateMappingResponse) Reset() {
	*x = UpdateMappingResponse{}
	mi := &file_mapping_v1_mapping_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateMappingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMappingResponse) ProtoMessage() {}

func (x *UpdateMappingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mapping_v1_mapping_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMappingResponse.ProtoReflect.Descriptor instead.
func (*UpdateMappingResponse) Descriptor() ([]byte, []int) {
	return file_mapping_v1_mapping_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateMappingResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// Запрос на удаление маппинга
type DeleteMappingRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	StationId       string                 `protobuf:"bytes,1,opt,name=station_id,json=stationId,proto3" json:"station_id,omitempty"`
	CentralSystemId int32                  `protobuf:"varint,2,opt,name=central_system_id,json=centralSystemId,proto3" json:"central_system_id,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *DeleteMappingRequest) Reset() {
	*x = DeleteMappingRequest{}
	mi := &file_mapping_v1_mapping_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteMappingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMappingRequest) ProtoMessage() {}

func (x *DeleteMappingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mapping_v1_mapping_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMappingRequest.ProtoReflect.Descriptor instead.
func (*DeleteMappingRequest) Descriptor() ([]byte, []int) {
	return file_mapping_v1_mapping_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteMappingRequest) GetStationId() string {
	if x != nil {
		return x.StationId
	}
	return ""
}

func (x *DeleteMappingRequest) GetCentralSystemId() int32 {
	if x != nil {
		return x.CentralSystemId
	}
	return 0
}

// Ответ на удаление маппинга
type DeleteMappingResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteMappingResponse) Reset() {
	*x = DeleteMappingResponse{}
	mi := &file_mapping_v1_mapping_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteMappingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMappingResponse) ProtoMessage() {}

func (x *DeleteMappingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mapping_v1_mapping_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMappingResponse.ProtoReflect.Descriptor instead.
func (*DeleteMappingResponse) Descriptor() ([]byte, []int) {
	return file_mapping_v1_mapping_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteMappingResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

var File_mapping_v1_mapping_proto protoreflect.FileDescriptor

var file_mapping_v1_mapping_proto_rawDesc = string([]byte{
	0x0a, 0x18, 0x6d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x61, 0x70,
	0x70, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x6d, 0x61, 0x70, 0x70,
	0x69, 0x6e, 0x67, 0x22, 0x17, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x4d, 0x61, 0x70,
	0x70, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x46, 0x0a, 0x16,
	0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x08, 0x6d, 0x61, 0x70, 0x70, 0x69, 0x6e,
	0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6d, 0x61, 0x70, 0x70, 0x69,
	0x6e, 0x67, 0x2e, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x52, 0x08, 0x6d, 0x61, 0x70, 0x70,
	0x69, 0x6e, 0x67, 0x73, 0x22, 0xa8, 0x01, 0x0a, 0x07, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67,
	0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x2a, 0x0a, 0x11, 0x63, 0x65, 0x6e, 0x74, 0x72, 0x61, 0x6c, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x63, 0x65, 0x6e, 0x74,
	0x72, 0x61, 0x6c, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x77,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x77, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72,
	0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x22,
	0xb5, 0x01, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x63, 0x65, 0x6e, 0x74, 0x72,
	0x61, 0x6c, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0f, 0x63, 0x65, 0x6e, 0x74, 0x72, 0x61, 0x6c, 0x53, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x69,
	0x73, 0x5f, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08,
	0x69, 0x73, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x65,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73,
	0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x22, 0x31, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0xb5, 0x01, 0x0a, 0x14, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x63, 0x65, 0x6e, 0x74, 0x72, 0x61, 0x6c, 0x5f, 0x73, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x63,
	0x65, 0x6e, 0x74, 0x72, 0x61, 0x6c, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x6d, 0x61, 0x73,
	0x74, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x4d, 0x61, 0x73,
	0x74, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x22, 0x31, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x70, 0x70,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x61, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d,
	0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11,
	0x63, 0x65, 0x6e, 0x74, 0x72, 0x61, 0x6c, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x63, 0x65, 0x6e, 0x74, 0x72, 0x61, 0x6c,
	0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x22, 0x31, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x32, 0xdb, 0x02, 0x0a, 0x0e,
	0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x53,
	0x0a, 0x0e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x73,
	0x12, 0x1e, 0x2e, 0x6d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c,
	0x6c, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1f, 0x2e, 0x6d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c,
	0x6c, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x70,
	0x70, 0x69, 0x6e, 0x67, 0x12, 0x1d, 0x2e, 0x6d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x6d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d,
	0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x12, 0x1d, 0x2e, 0x6d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x6d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x12, 0x1d, 0x2e, 0x6d, 0x61, 0x70, 0x70, 0x69,
	0x6e, 0x67, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x6d, 0x61, 0x70, 0x70, 0x69, 0x6e,
	0x67, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x29, 0x5a, 0x27, 0x6f, 0x63, 0x70,
	0x70, 0x5f, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e,
	0x6d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x3b, 0x6d, 0x61, 0x70, 0x70, 0x69,
	0x6e, 0x67, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_mapping_v1_mapping_proto_rawDescOnce sync.Once
	file_mapping_v1_mapping_proto_rawDescData []byte
)

func file_mapping_v1_mapping_proto_rawDescGZIP() []byte {
	file_mapping_v1_mapping_proto_rawDescOnce.Do(func() {
		file_mapping_v1_mapping_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_mapping_v1_mapping_proto_rawDesc), len(file_mapping_v1_mapping_proto_rawDesc)))
	})
	return file_mapping_v1_mapping_proto_rawDescData
}

var file_mapping_v1_mapping_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_mapping_v1_mapping_proto_goTypes = []any{
	(*GetAllMappingsRequest)(nil),  // 0: mapping.GetAllMappingsRequest
	(*GetAllMappingsResponse)(nil), // 1: mapping.GetAllMappingsResponse
	(*Mapping)(nil),                // 2: mapping.Mapping
	(*CreateMappingRequest)(nil),   // 3: mapping.CreateMappingRequest
	(*CreateMappingResponse)(nil),  // 4: mapping.CreateMappingResponse
	(*UpdateMappingRequest)(nil),   // 5: mapping.UpdateMappingRequest
	(*UpdateMappingResponse)(nil),  // 6: mapping.UpdateMappingResponse
	(*DeleteMappingRequest)(nil),   // 7: mapping.DeleteMappingRequest
	(*DeleteMappingResponse)(nil),  // 8: mapping.DeleteMappingResponse
}
var file_mapping_v1_mapping_proto_depIdxs = []int32{
	2, // 0: mapping.GetAllMappingsResponse.mappings:type_name -> mapping.Mapping
	0, // 1: mapping.MappingService.GetAllMappings:input_type -> mapping.GetAllMappingsRequest
	3, // 2: mapping.MappingService.CreateMapping:input_type -> mapping.CreateMappingRequest
	5, // 3: mapping.MappingService.UpdateMapping:input_type -> mapping.UpdateMappingRequest
	7, // 4: mapping.MappingService.DeleteMapping:input_type -> mapping.DeleteMappingRequest
	1, // 5: mapping.MappingService.GetAllMappings:output_type -> mapping.GetAllMappingsResponse
	4, // 6: mapping.MappingService.CreateMapping:output_type -> mapping.CreateMappingResponse
	6, // 7: mapping.MappingService.UpdateMapping:output_type -> mapping.UpdateMappingResponse
	8, // 8: mapping.MappingService.DeleteMapping:output_type -> mapping.DeleteMappingResponse
	5, // [5:9] is the sub-list for method output_type
	1, // [1:5] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_mapping_v1_mapping_proto_init() }
func file_mapping_v1_mapping_proto_init() {
	if File_mapping_v1_mapping_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_mapping_v1_mapping_proto_rawDesc), len(file_mapping_v1_mapping_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_mapping_v1_mapping_proto_goTypes,
		DependencyIndexes: file_mapping_v1_mapping_proto_depIdxs,
		MessageInfos:      file_mapping_v1_mapping_proto_msgTypes,
	}.Build()
	File_mapping_v1_mapping_proto = out.File
	file_mapping_v1_mapping_proto_goTypes = nil
	file_mapping_v1_mapping_proto_depIdxs = nil
}
